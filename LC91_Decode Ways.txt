class Solution{
public: 
    int numDecodings(string& s){
        //corner case
        if(s.empty() || (s.length() == 1 && !isValid(s[0]) ) ) return 0;
        if(s.length() == 1 && isValid(s[0])) return 1;
        int ans = 0;
        int w1 = 1, w2 = 1;    // dp1 record
        for (int i = 1; i < s.length(); ++i){
            if(!isValid(s[i]) && !isValid(s[i - 1], s[i]))
                return 0;
            if(isValid(s[i]))
                ans = w1;
            if(isValid(s[i - 1], s[i]))
                ans += w2;
            w2 = w1;
            w1 = ans;
        }
        return w1;
    }
    
    bool isValid(const char c){
        if(c == '0')
            return false;
        else
            return true;
    }
    
    bool isValid(const char c1, const char c2){
        int num = (c1 - '0') * 10 + c2 - '0';
        if ( 10 <= num && num <=26)
            return true;
        else
            return false;
    }
};